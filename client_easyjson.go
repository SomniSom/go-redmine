// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package redmine

import (
	"github.com/mailru/easyjson/jlexer"
	"github.com/mailru/easyjson/jwriter"
)

func (Client) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*Client) UnmarshalJSON([]byte) error        { return nil }
func (Client) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*Client) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Client *Client

func (Id) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*Id) UnmarshalJSON([]byte) error        { return nil }
func (Id) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*Id) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Id *Id

func (IdName) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*IdName) UnmarshalJSON([]byte) error        { return nil }
func (IdName) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*IdName) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_IdName *IdName

func (errorsResult) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*errorsResult) UnmarshalJSON([]byte) error        { return nil }
func (errorsResult) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*errorsResult) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_errorsResult *errorsResult
